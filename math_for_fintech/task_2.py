from scipy.stats import chi2
from mpmath import mp #задание библиотек
mp.dps = 100000   #количество знаков пи
p = mp.pi #число пи
a=[0]*10 #массив для измерения количества каждой цифры

n = 100 #знаки после запятой
for i in range(n): #цикл для определения каждой цифры после запятой
    p *= 10
    count = int(p)%10
    a[count] += 1
 
#В массиве a - эмпирические частоты (из числа пи)
b = [n//10]*10
#В массиве b - равномерные частоты (каждая цифра n/10 раз)

hi2 = 0.0 #начальное значение хи-квадрат

for i in range(n//10): #расчёт хи-квадрат
    hi2 += (a[i]-b[i])**2/b[i]
    
print("hi2 = ", hi2)
print("hi2_crit  alpha")
alpha = 0.0 #начальное значение альфа
alpha1 = 0.0 #искомое альфа
t = 0 #флаг
df = 9 #число степене свобод
for i in range(0,100): #подбор альфа, i от 0 до 100, альфа = i/100.
    alpha = i / 100
    hi2cr = chi2.ppf(alpha, df) #расчёт критического хи-квадрат по готовой функции
    if hi2 < hi2cr and t == 0: #поиск граничн. альфа
        alpha1 = 1 - alpha
        t = 1

    print(f'{"%.3f      %.2f" % (hi2cr, 1-alpha)}') # вывод критического значения и соотв. альфа
    
print("Искомое альфа: ",alpha1)
